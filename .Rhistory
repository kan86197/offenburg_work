runApp()
shiny::runApp()
runApp()
runApp()
train_list <- list.files(train_set, ".png")
#Directories for moving data.
#Put the path to the folder which hold the dataset.
train_set <- .jcall(helper, "S", "processPath", train_path)
preprocess <- function(train_path, val_path, test_path, num_train, num_val, num_test){
#Directories for moving data.
#Put the path to the folder which hold the dataset.
train_set <- .jcall(helper, "S", "processPath", train_path)
val_set <- .jcall(helper, "S", "processPath", val_path)
test_set <- .jcall(helper, "S", "processPath", test_path)
train_list <- list.files(train_set, ".png")
val_list <- list.files(val_set, ".png")
test_list <- list.files(test_set, ".png")
#Validation folder was manually created, the original data directory does not contain a validation folder
#Suppress warning due to large amount of warning messages slowing the program
suppressWarnings({
train_images <- file.path(train_set, "images")
train_labels <- file.path(train_set, "labels")
dir.create(train_images)
dir.create(train_labels)
val_images <- file.path(val_set, "images")
val_labels <- file.path(val_set, "labels")
dir.create(val_images)
dir.create(val_labels)
test_images <- file.path(test_set, "images")
test_labels <- file.path(test_set, "labels")
dir.create(test_images)
dir.create(test_labels)
.jcall(helper, "V", "SetPath", train_labels, train_images)
.jcall(helper, "V", "deleteOldFiles")
.jcall(helper, "V", "SetPath", val_labels, val_images)
.jcall(helper, "V", "deleteOldFiles")
.jcall(helper, "V", "SetPath", test_labels, test_images)
.jcall(helper, "V", "deleteOldFiles")
#Change the number to the amount of samples picture you want to use
move_desired_samples(train_set, train_images, 1, num_train, ".png")
move_desired_samples(train_set, train_labels, 1, num_train, ".txt")
move_desired_samples(val_set, val_images, 1, num_val, ".png")
move_desired_samples(val_set, val_labels, 1, num_val, ".txt")
move_desired_samples(test_set, test_images, 1, num_test, ".png")
move_desired_samples(test_set, test_labels, 1, num_test, ".txt")
#invoke java methods to move file into subfolders where keras can understand
.jcall(helper, "V", "SetPath", train_labels, train_images)
.jcall(helper, "V", "main", .jarray(list(), "java/lang/String"))
.jcall(helper, "V", "SetPath", val_labels, val_images)
.jcall(helper, "V", "main", .jarray(list(), "java/lang/String"))
.jcall(helper, "V", "SetPath", test_labels, test_images)
.jcall(helper, "V", "main", .jarray(list(), "java/lang/String"))
})
}
runApp()
x <- c(5,4)
as.array(x)
x <- as.array(x)
names(x)
names(x)[0] <- "X"
names(x)
names(x)[0] <- "X"
names(x)
names(x)[1] <- "X"
names(x)
names(x) <- c("X","Y")
names(x)
shiny::runApp()
x
as.array(single_test_result)
runApp()
runApp()
runApp()
runApp()
m0 <- matrix(NA, 4, 0)
rownames(m0)
m2 <- cbind(1, 1:4)
colnames(m2, do.NULL = FALSE)
colnames(m2) <- c("x","Y")
rownames(m2) <- rownames(m2, do.NULL = FALSE, prefix = "Obs.")
m2
m0 <- matrix(NA, 4, 0)
m2 <- cbind(1, 1:4)
m2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
model <- application_resnet50()
print(summary(model))
runApp()
runApp()
